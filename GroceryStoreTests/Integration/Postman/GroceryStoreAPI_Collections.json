{
  "info": {
    "_postman_id": "1daad7d1-673e-4d7c-8af8-9cfbcfec88d1",
    "name": "GroceryStoreAPI",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "16805945"
  },
  "item": [
    {
      "name": "Products",
      "item": [
        {
          "name": "Get All Products",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 200\", () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test('At least one available product exists', () => {\r",
                  "    const response = pm.response.json();\r",
                  "\r",
                  "    pm.expect(response).to.be.an('array');\r",
                  "    pm.expect(response.length).to.be.above(0);\r",
                  "\r",
                  "    const product = response[0];\r",
                  "    pm.expect(product).to.be.an('object');\r",
                  "    pm.expect(product).to.haveOwnProperty('id');\r",
                  "    pm.expect(product.id).to.be.a('number');\r",
                  "    pm.expect(product).to.haveOwnProperty('inStock');\r",
                  "    pm.expect(product.inStock).to.be.true;\r",
                  "\r",
                  "    pm.environment.set('productId', product.id);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products",
              "host": ["{{baseUrl}}"],
              "path": ["products"],
              "query": [
                {
                  "key": "category",
                  "value": "test",
                  "disabled": true
                },
                {
                  "key": "results",
                  "value": "2",
                  "disabled": true
                },
                {
                  "key": "available",
                  "value": "false",
                  "disabled": true
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get single Product",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Status code is 200\", () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Return Product has all the properties\", () => {\r",
                  "    pm.expect(response).to.be.an(\"object\").that.includes.all.keys([\r",
                  "        \"id\", \"category\", \"name\", \"manufacturer\", \"price\", \"currentStock\", \"inStock\"\r",
                  "    ]);\r",
                  "    const productId = response.id;\r",
                  "    pm.collectionVariables.set(\"productId\", productId);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Returned properties are in correct format\", () => {\r",
                  "    pm.expect(response.id).to.be.a(\"number\");\r",
                  "    pm.expect(response.category).to.be.a(\"string\");\r",
                  "    pm.expect(response.name).to.be.a(\"string\");\r",
                  "    pm.expect(response.manufacturer).to.be.a(\"string\");\r",
                  "    pm.expect(response.price).to.be.a(\"number\");\r",
                  "    pm.expect(response.currentStock).to.be.a(\"number\");\r",
                  "    pm.expect(response.inStock).to.be.a(\"boolean\");\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/products/:productId",
              "host": ["{{baseUrl}}"],
              "path": ["products", ":productId"],
              "variable": [
                {
                  "key": "productId",
                  "value": "1225"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Carts",
      "item": [
        {
          "name": "Create a new cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 201\", () => {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"response should have created and cartId\", () => {\r",
                  "    pm.expect(response).to.be.an('object');\r",
                  "    pm.expect(response).to.haveOwnProperty(\"created\");\r",
                  "    pm.expect(response).to.haveOwnProperty(\"cartId\");\r",
                  "    const cartId = response.cartId;\r",
                  "    pm.expect(cartId).to.be.a('string');\r",
                  "    pm.collectionVariables.set(\"cartId\", cartId);\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/carts",
              "host": ["{{baseUrl}}"],
              "path": ["carts"]
            }
          },
          "response": []
        },
        {
          "name": "Get cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Status code is 200\", () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Response has proper keys\", () => {\r",
                  "    pm.expect(response).to.be.an(\"object\");\r",
                  "    pm.expect(response).to.haveOwnProperty(\"created\");\r",
                  "    pm.expect(response).to.haveOwnProperty(\"items\");\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/carts/:cartId",
              "host": ["{{baseUrl}}"],
              "path": ["carts", ":cartId"],
              "variable": [
                {
                  "key": "cartId",
                  "value": "{{cartId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Add an item to cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 201\", () => {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"check if body has itemId returned\", () => {\r",
                  "    pm.expect(response).to.be.an('object');\r",
                  "    pm.expect(response).to.haveOwnProperty(\"itemId\");\r",
                  "    pm.expect(response).to.haveOwnProperty(\"created\");\r",
                  "    const itemId = response.itemId;\r",
                  "    pm.expect(itemId).to.be.a('number');\r",
                  "    pm.expect(response.created).to.be.true;\r",
                  "    pm.collectionVariables.set(\"lastAddedItemId\", itemId);\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"productId\": 4643\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/carts/:cartId/items/",
              "host": ["{{baseUrl}}"],
              "path": ["carts", ":cartId", "items", ""],
              "variable": [
                {
                  "key": "cartId",
                  "value": "{{cartId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Get cart items",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 200\", () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response Body should be an array\", () => {\r",
                  "    pm.expect(response).to.be.an(\"array\");\r",
                  "});\r",
                  "\r",
                  "pm.test(\"Array should contain an object, with productId and quantity\", () => {\r",
                  "    const item = response[0];\r",
                  "    pm.expect(item).not.be.empty;\r",
                  "    pm.expect(item).to.be.an(\"object\");\r",
                  "    pm.expect(item).to.haveOwnProperty(\"productId\");\r",
                  "    pm.expect(item).to.haveOwnProperty(\"quantity\");\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/carts/:cartId/items",
              "host": ["{{baseUrl}}"],
              "path": ["carts", ":cartId", "items"],
              "variable": [
                {
                  "key": "cartId",
                  "value": "{{cartId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Update quantity",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 204\", () => {\r",
                  "    pm.response.to.have.status(204);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"quantity\": 2\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
              "host": ["{{baseUrl}}"],
              "path": ["carts", ":cartId", "items", ":itemId"],
              "variable": [
                {
                  "key": "cartId",
                  "value": "{{cartId}}"
                },
                {
                  "key": "itemId",
                  "value": "{{lastAddedItemId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Replace product in cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 204\", () => {\r",
                  "    pm.response.to.have.status(204);\r",
                  "    pm.collectionVariables.set(\"lastAddedItemId\", 1225);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"productId\": 1225,\r\n    \"quantity\": 1\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
              "host": ["{{baseUrl}}"],
              "path": ["carts", ":cartId", "items", ":itemId"],
              "variable": [
                {
                  "key": "cartId",
                  "value": "{{cartId}}"
                },
                {
                  "key": "itemId",
                  "value": "{{lastAddedItemId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete Item in cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 204\", () => {\r",
                  "    pm.response.to.have.status(204);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/carts/:cartId/items/:itemId",
              "host": ["{{baseUrl}}"],
              "path": ["carts", ":cartId", "items", ":itemId"],
              "variable": [
                {
                  "key": "cartId",
                  "value": "{{cartId}}"
                },
                {
                  "key": "itemId",
                  "value": "{{lastAddedItemId}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Orders",
      "item": [
        {
          "name": "Register API Client",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 201\", () => {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Response comes with access token\", () => {\r",
                  "    pm.expect(response).to.be.an(\"object\");\r",
                  "    pm.expect(response).to.haveOwnProperty(\"accessToken\");\r",
                  "    pm.expect(response.accessToken).to.be.a(\"string\");\r",
                  "    pm.collectionVariables.set(\"accessToken\", response.accessToken);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n   \"clientName\": \"Postman on Valentin's computer\",\r\n   \"clientEmail\": \"valentin_test200@example.com\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api-clients",
              "host": ["{{baseUrl}}"],
              "path": ["api-clients"]
            }
          },
          "response": []
        },
        {
          "name": "Create an order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 201\", () => {\r",
                  "    pm.response.to.have.status(201);\r",
                  "});\r",
                  "\r",
                  "const response = pm.response.json();\r",
                  "\r",
                  "pm.test(\"Order was created\", () => {\r",
                  "    pm.expect(response).to.be.an('object');\r",
                  "    pm.expect(response).to.haveOwnProperty('created')\r",
                  "    const created = response.created;\r",
                  "    pm.expect(created).to.be.true;\r",
                  "    pm.expect(response).to.haveOwnProperty('orderId');\r",
                  "    const orderId = response.orderId;\r",
                  "    pm.expect(orderId).to.be.a('string');\r",
                  "    pm.collectionVariables.set(\"orderId\", orderId);\r",
                  "})"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n    \"cartId\": \"{{cartId}}\",\r\n    \"customerName\": \"{{$randomFullName}}\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            }
          },
          "response": []
        },
        {
          "name": "Get all orders",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 200\", () => {\r",
                  "    pm.response.to.have.status(200);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "",
                "type": "text",
                "disabled": true
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/orders",
              "host": ["{{baseUrl}}"],
              "path": ["orders"]
            }
          },
          "response": []
        },
        {
          "name": "Update order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 204\", () => {\r",
                  "    pm.response.to.have.status(204);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "PATCH",
            "header": [],
            "body": {
              "mode": "raw",
              "raw": "{\r\n \"comment\": \"Pickup at 3PM.\"\r\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/orders/:orderId",
              "host": ["{{baseUrl}}"],
              "path": ["orders", ":orderId"],
              "variable": [
                {
                  "key": "orderId",
                  "value": "{{orderId}}"
                }
              ]
            }
          },
          "response": []
        },
        {
          "name": "Delete order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "console.clear();\r",
                  "\r",
                  "pm.test(\"Status code is 204\", () => {\r",
                  "    pm.response.to.have.status(204);\r",
                  "});"
                ],
                "type": "text/javascript",
                "packages": {}
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{accessToken}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/orders/:orderId",
              "host": ["{{baseUrl}}"],
              "path": ["orders", ":orderId"],
              "variable": [
                {
                  "key": "orderId",
                  "value": "{{orderId}}"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Get single order",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "console.clear();\r",
              "\r",
              "pm.test(\"Status code is 404\", () => {\r",
              "    pm.response.to.have.status(404);\r",
              "});\r",
              "\r",
              ""
            ],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{accessToken}}",
              "type": "string"
            }
          ]
        },
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/orders/:orderId",
          "host": ["{{baseUrl}}"],
          "path": ["orders", ":orderId"],
          "variable": [
            {
              "key": "orderId",
              "value": "{{orderId}}"
            }
          ]
        }
      },
      "response": []
    },
    {
      "name": "Status",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "const response = pm.response.json();\r",
              "\r",
              "pm.test(\"Status should be 200\", () => {\r",
              "    pm.response.to.have.status(200);\r",
              "});"
            ],
            "type": "text/javascript",
            "packages": {}
          }
        },
        {
          "listen": "prerequest",
          "script": {
            "exec": [""],
            "type": "text/javascript",
            "packages": {}
          }
        }
      ],
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/status",
          "host": ["{{baseUrl}}"],
          "path": ["status"]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": ["\r", ""]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "packages": {},
        "exec": [""]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/",
      "type": "string"
    },
    {
      "key": "productId",
      "value": ""
    },
    {
      "key": "cartId",
      "value": ""
    },
    {
      "key": "lastAddedItemId",
      "value": ""
    },
    {
      "key": "accessToken",
      "value": ""
    },
    {
      "key": "orderId",
      "value": ""
    }
  ]
}
